#include <AFMotor.h>
#include <Servo.h>

//avant
AF_DCMotor motorAVD(1); //Moteur avand Droit
AF_DCMotor motorAVG(2); //G

//arrière 
AF_DCMotor motorARG(3); //Moteur arrière Gauche
AF_DCMotor motorARD(4); //D

int incomingByte = 0;  

int ledAD = 4;      // éclaireage
int ledAG = 3;
int ledARD = 2;
int ledARG = 1;

Servo cam;        //Servo modifiant la position de la Caméra
int valCam = 0;   //Valeur de la position de la Caméra

void setup()
{
  Serial.begin(115200);   
  cam.attach(9);  //On défini le pin 9 pour le servo
  cam.write(90);  //On oriente le servo au Millieu de sa potion (180/2)
}

void loop()
{

  
       
  
  	if (Serial.available() > 0) {
		// read the incoming byte:
		incomingByte = Serial.read();
		}

  
  
  
  switch(incomingByte)      //Si le port COM reçoit la valeur 's' alors on stop
  {
     case 's':
       motorAVD.setSpeed(0);
       motorAVD.run(FORWARD);
       
       motorAVG.setSpeed(0);
       motorAVG.run(FORWARD);
       
       motorARD.setSpeed(0);
       motorARD.run(FORWARD);

       motorARG.setSpeed(0);
       motorARG.run(FORWARD);
       incomingByte='*';
      
     break;
     
     case 'a':        //Si le port COM reçoit la valeur 'a' alors on avance etc..
       motorAVD.setSpeed(255);
       motorAVD.run(FORWARD);
       
       motorAVG.setSpeed(255);
       motorAVG.run(FORWARD);
       
       motorARD.setSpeed(255);
       motorARD.run(FORWARD);

       motorARG.setSpeed(255);
       motorARG.run(FORWARD);
       
       incomingByte='*';
     break;
    
      case 'r':
       motorAVD.setSpeed(255);
       motorAVD.run(BACKWARD);
       
       motorAVG.setSpeed(255);
       motorAVG.run(BACKWARD);
       
       motorARD.setSpeed(255);
       motorARD.run(BACKWARD);

       motorARG.setSpeed(255);
       motorARG.run(BACKWARD);
       
       incomingByte='*';
     break;
     
     case 'g':
       motorAVD.setSpeed(255);
       motorAVD.run(FORWARD);
       
       motorAVG.setSpeed(255);
       motorAVG.run(BACKWARD);
       
       motorARD.setSpeed(255);
       motorARD.run(FORWARD);

       motorARG.setSpeed(255);
       motorARG.run(BACKWARD);
       incomingByte='*';
     break;

     
       case 'd':
       motorAVD.setSpeed(255);
       motorAVD.run(BACKWARD);
       
       motorAVG.setSpeed(255);
       motorAVG.run(FORWARD);
       
       motorARD.setSpeed(255);
       motorARD.run(BACKWARD);

       motorARG.setSpeed(255);
       motorARG.run(FORWARD);
       incomingByte='*';
     break;

     case '8': 
       
       incomingByte='*';
     break;

     case '4':
     
       incomingByte='*';
     break;

     case '2':
       
       incomingByte='*';
     break;
     
     case '6':
     
       incomingByte='*';
     break;
     
     case '1':
       valCam = valCam + 2;
       cam.write(valCam);  
       incomingByte='*';
     break;
     
     case '3':
      valCam = valCam - 10;
      cam.write(valCam);  
       incomingByte='*';
     break;
     
     case '0':
       valCam = 90;
       cam.write(valCam);  
       incomingByte='*';
     break;
   
   
  }
  
 
            
  
}  
